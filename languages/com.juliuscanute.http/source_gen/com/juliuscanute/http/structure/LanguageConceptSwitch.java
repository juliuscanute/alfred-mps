package com.juliuscanute.http.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int BinaryExpression = 0;
  public static final int DivideExpression = 1;
  public static final int EmptyHttpAction = 2;
  public static final int Expression = 3;
  public static final int GetHttpAction = 4;
  public static final int HTTPAction = 5;
  public static final int HTTPActionList = 6;
  public static final int HTTPProgram = 7;
  public static final int MinusExpression = 8;
  public static final int MultiplyExpression = 9;
  public static final int PlusExpression = 10;
  public static final int StringLiteral = 11;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xd6f1829c44d840a5L, 0xb1c7596bc2927669L);
    builder.put(0x213015ae9f644361L, BinaryExpression);
    builder.put(0x213015ae9f645487L, DivideExpression);
    builder.put(0x5e5f23e9f35a2835L, EmptyHttpAction);
    builder.put(0x213015ae9f643d10L, Expression);
    builder.put(0x5e5f23e9f35f0252L, GetHttpAction);
    builder.put(0x5e5f23e9f35a2787L, HTTPAction);
    builder.put(0x5e5f23e9f35a278aL, HTTPActionList);
    builder.put(0x5e5f23e9f35a2786L, HTTPProgram);
    builder.put(0x213015ae9f8a0179L, MinusExpression);
    builder.put(0x213015ae9f8a017aL, MultiplyExpression);
    builder.put(0x213015ae9f8a0178L, PlusExpression);
    builder.put(0x213015ae9f643d0eL, StringLiteral);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
